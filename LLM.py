import time
from dotenv import dotenv_values
import requests
import json

KEY_1 = "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"
KEY_2 = "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"
MODEL = "deepseek/deepseek-chat-v3.1:free"
FINANCIAL_ANALYSIS_PROMPT = """
Ты — AI-финансовый аналитик в режиме реального времени, работающий в сервисе приоритизации новостей. Твоя задача — всесторонне проанализировать финансовую новость, оценить ее потенциальное влияние и достоверность, а затем структурировать вывод в заданном формате, готовом для использования аналитиками.

**Ключевые метрики для оценки:**

1.  **Hotness Score (Горячесть):** Общая оценка значимости и срочности новости по шкале от 0.0 до 1.0.
    *   `0.0-0.4` (Холодная): Шум, ожидаемое событие, низкое влияние или достоверность. Не имеет отношения к финансам или Косвенное отношение к финансам
    *   `0.5-0.6` (Теплая): Материальная новость, но ожидаемая или с ограниченным охватом. 
    *   `0.7-0.8` (Горячая): Неожиданное событие с высоким влиянием на сектор/активы.
    *   `0.9-1.0` (Очень горячая): Критическое, хвостовое событие с рыночным перекосом.

2.  **Business Impact (Значимость):** Потенциальное влияние на рынки, компании и экономику. Шкала 1-10.
    *   **Факторы:** Неожиданность, Материальность, Широта охвата, Скорость воздействия.

3.   **Reliability (Надежность):** Комплексная оценка достоверности источника и подтверждений. Шкала 1-10.
    *   **Факторы достоверности источника:**
        - **9-10 (Эталонный):** Официальные релизы компаний, регуляторов, центральных банков, судебные документы
        - **7-8 (Высокий):** Авторитетные новостные агентства (Reuters, Bloomberg), отраслевые СМИ с проверенной репутацией
        - **5-6 (Средний):** Региональные СМИ, официальные блоги компаний, пресс-релизы, малая вероятность такой новости 
        - **3-4 (Низкий):** Соцсети известных аналитиков, отраслевые блоги без прямой атрибуции
        - **1-2 (Очень низкий):** Анонимные источники, неподтвержденные слухи, фейковые аккаунты, невозможность или абсурдность новости

    *   **Факторы подтверждений:**
        - **Множественные независимые подтверждения:** Новость подтверждена 2+ независимыми источниками
        - **Официальное подтверждение:** Есть официальный комментарий от компании/регулятора
        - **Частичное подтверждение:** Косвенные подтверждения или подтверждение отдельных деталей
        - **Отсутствие подтверждений:** Нет независимых подтверждений, только первоисточник
        - **Опровержение:** Есть официальные опровержения или противоречивые данные

    *   **Факторы детализации:**
        - **Высокая:** Конкретные цифры, цитаты, ссылки на документы, имена должностных лиц
        - **Средняя:** Общие формулировки с некоторыми деталями
        - **Низкая:** Размытые утверждения без конкретики

**Формат вывода (строго JSON):**

{
  "headline": "Краткий заголовок",
  "hotness": число от 0.0 до 1.0,
  "why_now": "1-2 фразы почему важно сейчас",
  "entities": ["список", "компаний", "тикеров"],
  "sources": ["основной источник (если в новости есть ссылка, верни ссылку)"],
  "timeline": ["Первое сообщение - дата],
  "draft": {
    "title": "Заголовок для черновика",
    "lead": "Лид-абзац",
    "bullets": ["Факт 1", "Факт 2", "Влияние"],
    "quote": "Цитата или сноска"
  },
  "analysis_breakdown": {
    "business_impact_score": X,
    "business_impact_reasoning": "Обоснование",
    "reliability": число от 0.0 до 1.0,
    "reliability_reasoning": "Обоснование"
  }
}

Проанализируй следующие новости:
"""


def get_news_info(news_text):
    """ Передаётся максимально подробная инфа о новости или группе новостей
     Возвращается json. У дипсика это всё долго делается (есть таймер), но вроде качественно
     """
    start = time.time()
    try:
        response = requests.post(
            url="https://openrouter.ai/api/v1/chat/completions",
            headers={
                "Authorization": f"Bearer {KEY_1}",

            },
            data=json.dumps({
                "model": MODEL,  # Optional
                "messages": [
                    {
                        "role": "system",
                        "content": [
                            {
                                "type": "text",
                                "text": FINANCIAL_ANALYSIS_PROMPT,
                                "cache_control": {"type": "ephemeral"}
                            }
                        ]
                    },
                    {
                        "role": "user",
                        "content": [
                            {
                                "type": "text",
                                "text": f"Проанализируй следующую финансовую новость:\n\n{news_text}"
                            }
                        ]
                    }
                ],
            })
        )
        js_res = response.json()

        end = time.time()

        return js_res["choices"][0]["message"]["content"][7:-3]
    except Exception:
        response = requests.post(
            url="https://openrouter.ai/api/v1/chat/completions",
            headers={
                "Authorization": f"Bearer {KEY_2}",

            },
            data=json.dumps({
                "model": MODEL,  # Optional
                "messages": [
                    {
                        "role": "system",
                        "content": [
                            {
                                "type": "text",
                                "text": FINANCIAL_ANALYSIS_PROMPT,
                                "cache_control": {"type": "ephemeral"}
                            }
                        ]
                    },
                    {
                        "role": "user",
                        "content": [
                            {
                                "type": "text",
                                "text": f"Проанализируй следующую финансовую новость:\n\n{news_text}"
                            }
                        ]
                    }
                ],
            })
        )
        js_res = response.json()

        end = time.time()

        return js_res["choices"][0]["message"]["content"][7:-3]


a = get_news_info("""Wine from China is finer than Western snobs imagine
                    https://www.economist.com/interactive/culture/2025/10/02/wine-from-china-is-finer-than-western-snobs-imagine
                    Thu, 02 Oct 2025 09:34:54 +0000
                    """)
# print(json.loads(a[7:-3]))
